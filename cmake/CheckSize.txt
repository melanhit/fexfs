INCLUDE(CheckTypeSize)

CHECK_TYPE_SIZE(uint8_t HAVE_UINT8_T)
CHECK_TYPE_SIZE(uint8_t HAVE_UINT8_T)
CHECK_TYPE_SIZE(uint32_t HAVE_UINT32_T)
CHECK_TYPE_SIZE(uint64_t HAVE_UINT64_T)
CHECK_TYPE_SIZE(size_t HAVE_SIZE_T)
CHECK_TYPE_SIZE(ssize_t HAVE_SSIZE_T)

if(NOT HAVE_UINT8_T)
    unset(HAVE_UINT8_T)
    message(FATAL_ERROR "uint8_t is not found")
endif()

if(NOT ${HAVE_UINT8_T} EQUAL "1")
    unset(HAVE_UINT8_T)
    message(FATAL_ERROR "uint8_t has unsupported size")
endif()

if(NOT HAVE_UINT32_T)
    unset(HAVE_UINT32_T)
    message(FATAL_ERROR "uint32_t is not found")
endif()

if(NOT ${HAVE_UINT32_T} EQUAL "4")
    unset(HAVE_UINT32_T)
    message(FATAL_ERROR "uint32_t has unsupported size")
endif()

if(NOT HAVE_UINT64_T)
    unset(HAVE_UINT64_T)
    message(FATAL_ERROR "uint64_t is not found")
endif()

if(NOT ${HAVE_UINT64_T} EQUAL "8")
    unset(HAVE_UINT64_T)
    message(FATAL_ERROR "uint64_t has unsupported size")
endif()

if(NOT HAVE_SIZE_T)
    unset(HAVE_SIZE_T)
    message(FATAL_ERROR "size_t is not found")
endif()

if(NOT HAVE_SSIZE_T)
    unset(HAVE_SSIZE_T)
    message(FATAL_ERROR "ssize_t is not found")
endif()

# vim: syn=cmake
